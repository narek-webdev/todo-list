{"version":3,"sources":["components/Copyright.js","components/Auth/SignUp.js","components/Auth/SignIn.js","components/Dashboard/Tasks/Create.js","components/Dashboard/Tasks/Tasks.js","components/Dashboard/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["Copyright","Typography","variant","color","align","Link","target","href","SignUp","state","nameValue","emailValue","passwordValue","ageValue","nameError","emailError","passwordError","isPasswordVisible","isButtonDisabled","changeName","bind","changeEmail","changePassword","changeAge","handleSubmit","passwordVisibleFunc","fetch","method","headers","localStorage","getItem","then","response","json","res","_id","window","location","process","e","preventDefault","this","setState","body","JSON","stringify","name","email","password","age","token","setItem","includes","value","classes","props","Grid","container","component","className","root","CssBaseline","item","xs","sm","md","image","Paper","elevation","square","paper","Avatar","avatar","form","onSubmit","noValidate","TextField","margin","required","fullWidth","id","label","autoComplete","autoFocus","error","helperText","onChange","type","InputProps","endAdornment","onClick","cursor","Button","submit","disabled","Box","mt","React","Component","withStyles","theme","height","backgroundImage","backgroundRepeat","backgroundColor","palette","grey","backgroundSize","backgroundPosition","spacing","display","flexDirection","alignItems","secondary","main","width","marginTop","SignIn","isLogin","Create","taskName","errorTest","isInputDisabled","isTasksAdded","addTask","changeTaskName","description","success","createCallback","data","setTimeout","catch","err","Fragment","onKeyUp","key","style","button","startIcon","textTransform","Tasks","isLoaded","deleteTaskError","deleteTaskSuccess","callbackFunction","deleteTask","changeStatus","childData","confirm","result","availableTasks","filter","isChecked","completed","console","log","List","length","map","ListItem","selected","ListItemIcon","Checkbox","defaultChecked","inputProps","checked","ListItemText","primary","ListItemSecondaryAction","IconButton","edge","aria-label","CircularProgress","drawerWidth","Dashboard","open","userName","userEmail","userId","imageName","handleDrawerOpen","handleDrawerClose","uploadImage","userAge","myHeaders","Headers","append","removeItem","formdata","FormData","files","redirect","succes","AppBar","position","clsx","appBar","appBarShift","Toolbar","menuButton","hide","noWrap","Drawer","drawer","anchor","drawerPaper","drawerHeader","alt","centerImage","src","Divider","logoutFunc","content","contentShift","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","easeOut","enteringScreen","marginRight","flexShrink","padding","mixins","toolbar","justifyContent","flexGrow","left","transform","marginBottom","App","basename","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","navigator","addEventListener","serviceWorker","register","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd92a26f.chunk.js","sourcesContent":["import Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nexport default function Copyright() {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {'Powered By` '}\r\n        <Link color=\"inherit\" target=\"_blank\" href=\"https://narek-webdev.github.io/site/\">\r\n          Narek Sargsyan\r\n        </Link>\r\n      </Typography>\r\n    );\r\n}","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport PasswordStrengthBar from 'react-password-strength-bar';\r\n\r\nimport Copyright from '../Copyright';\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n        height: '100vh',\r\n      },\r\n      image: {\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n          theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n      },\r\n      paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n      },\r\n      avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n      },\r\n      form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n      },\r\n      submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n      },\r\n});\r\n\r\nclass SignUp extends React.Component {\r\n\r\n    constructor () {\r\n        super();\r\n\r\n        this.state = {\r\n            nameValue: '',\r\n            emailValue: '',\r\n            passwordValue: '',\r\n            ageValue: '',\r\n\r\n            nameError: null,\r\n            emailError: null,\r\n            passwordError: null,\r\n\r\n            isPasswordVisible: false,\r\n\r\n            isButtonDisabled: false\r\n        }\r\n\r\n        this.changeName     = this.changeName.bind(this)\r\n        this.changeEmail    = this.changeEmail.bind(this)\r\n        this.changePassword = this.changePassword.bind(this)\r\n        this.changeAge      = this.changeAge.bind(this)\r\n        this.handleSubmit   = this.handleSubmit.bind(this)\r\n        this.passwordVisibleFunc = this.passwordVisibleFunc.bind(this)\r\n    }\r\n\r\n    componentDidMount () {\r\n        fetch(\"https://api-nodejs-todolist.herokuapp.com/user/me\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('auth_token')\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(res => {\r\n            if (res._id) window.location.href = process.env.REACT_APP_URL + \"/\"\r\n        })\r\n    }\r\n\r\n    handleSubmit (e) {\r\n        e.preventDefault();\r\n\r\n        this.setState({isButtonDisabled: true})\r\n\r\n        fetch(\"https://api-nodejs-todolist.herokuapp.com/user/register\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: this.state.nameValue, \r\n                email: this.state.emailValue, \r\n                password: this.state.passwordValue, \r\n                age: this.state.ageValue\r\n            })\r\n        })\r\n        .then(response => {return response.json()})\r\n        .then(res => {\r\n            this.setState({isButtonDisabled: false})\r\n\r\n            if (res.token) {\r\n                localStorage.setItem(\"auth_token\", res.token)\r\n                window.location.href = process.env.REACT_APP_URL + \"/\"\r\n            } else {\r\n                if (res.includes(\"Path `name` is required.\")) {\r\n                    this.setState({nameError: \"Please fill name field\"})\r\n                }\r\n    \r\n                if (res.includes(\"Path `email` is required.\")) {\r\n                    this.setState({emailError: \"Please fill email field\"})\r\n                }\r\n    \r\n                if (res.includes(\"Path `password` is required.\")) {\r\n                    this.setState({passwordError: \"Please fill password field\"})\r\n                }\r\n    \r\n                if (res.includes(\"Email is invalid\")) {\r\n                    this.setState({emailError: \"Please fill valid email\"})\r\n                }\r\n\r\n                if (res.includes(\"email_1 dup key\")) {\r\n                    this.setState({emailError: \"This email is busy\"})\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    changeName (e) {\r\n\r\n        if (this.state.nameError) {\r\n            this.setState({nameError: null})\r\n        }\r\n\r\n        this.setState({nameValue: e.target.value})\r\n    }\r\n\r\n    changeEmail (e) {\r\n        if (this.state.emailError) {\r\n            this.setState({emailError: null})\r\n        }\r\n\r\n        this.setState({emailValue: e.target.value})\r\n    }\r\n\r\n    changePassword (e) {\r\n        if (this.state.passwordError) {\r\n            this.setState({passwordError: null})\r\n        }\r\n\r\n        this.setState({passwordValue: e.target.value})\r\n    }\r\n    \r\n    passwordVisibleFunc () {\r\n        this.setState({isPasswordVisible: !this.state.isPasswordVisible});\r\n    }\r\n\r\n    changeAge (e) {\r\n        this.setState({ageValue: e.target.value})\r\n    }\r\n\r\n    render () {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Grid container component=\"main\" className={classes.root}>\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n                \r\n                <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n                    <Link color=\"inherit\" target=\"_blank\" href=\"https://narek-webdev.github.io/password-generator/\">\r\n                        Make Strong Password\r\n                    </Link>\r\n                </Typography>\r\n                \r\n                <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign Up\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={this.handleSubmit} noValidate>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"name\"\r\n                        label=\"Name\"\r\n                        name=\"name\"\r\n                        autoComplete=\"name\"\r\n                        autoFocus\r\n                        error={!this.state.nameError ? false : true}\r\n                        helperText={this.state.nameError}\r\n                        value={this.state.nameValue}\r\n                        onChange={this.changeName}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"email\"\r\n                        label=\"Email\"\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        autoComplete=\"email\"\r\n                        error={!this.state.emailError ? false : true}\r\n                        helperText={this.state.emailError}\r\n                        value={this.state.emailValue}\r\n                        onChange={this.changeEmail}\r\n                    />\r\n\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type={!this.state.isPasswordVisible ? \"password\" : \"text\"}\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        error={!this.state.passwordError ? false : true}\r\n                        helperText={this.state.passwordError}\r\n                        value={this.state.passwordValue}\r\n                        onChange={this.changePassword}\r\n                        InputProps={{\r\n                            endAdornment: !this.state.isPasswordVisible ? <VisibilityOffIcon onClick={this.passwordVisibleFunc} cursor=\"pointer\"/> : <VisibilityIcon onClick={this.passwordVisibleFunc} cursor=\"pointer\"/>\r\n                        }}\r\n                    />\r\n                    <PasswordStrengthBar password={this.state.passwordValue} />\r\n\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        name=\"age\"\r\n                        label=\"Age\"\r\n                        type=\"number\"\r\n                        id=\"age\"\r\n                        autoComplete=\"age\"\r\n                        value={this.state.ageValue}\r\n                        onChange={this.changeAge}\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        disabled={this.state.isButtonDisabled}\r\n                    >\r\n                    Sign Up\r\n                    </Button>\r\n                    \r\n                    <Grid container>\r\n                        <Grid item>\r\n                            <Link href=\"/signin\" variant=\"body2\">\r\n                            {\"Already have an account? Sign in\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Box mt={5}>\r\n                        <Copyright />\r\n                    </Box>\r\n                </form>\r\n                </div>\r\n            </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(SignUp)","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\n\r\nimport Copyright from '../Copyright';\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n        height: '100vh',\r\n      },\r\n      image: {\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n          theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n      },\r\n      paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n      },\r\n      avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n      },\r\n      form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n      },\r\n      submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n      },\r\n});\r\n\r\nclass SignIn extends React.Component {\r\n    constructor () {\r\n        super();\r\n\r\n        this.state = {\r\n            emailValue: '',\r\n            passwordValue: '',\r\n            isLogin: false,\r\n            isPasswordVisible: false,\r\n            isButtonDisabled: false\r\n        }\r\n\r\n        this.handleSubmit           = this.handleSubmit.bind(this)\r\n        this.changeEmail            = this.changeEmail.bind(this)\r\n        this.changePassword         = this.changePassword.bind(this)\r\n        this.passwordVisibleFunc    = this.passwordVisibleFunc.bind(this)\r\n    }\r\n\r\n    componentDidMount () {\r\n        fetch(\"https://api-nodejs-todolist.herokuapp.com/user/me\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('auth_token')\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(res => {\r\n            if (res._id) window.location.href = process.env.REACT_APP_URL + \"/\"\r\n        })\r\n    }\r\n    \r\n    handleSubmit (e) {\r\n        e.preventDefault();\r\n\r\n        this.setState({isButtonDisabled: true})\r\n\r\n        fetch(\"https://api-nodejs-todolist.herokuapp.com/user/login\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: this.state.emailValue, \r\n                password: this.state.passwordValue, \r\n            })\r\n        })\r\n        .then(response => {return response.json()})\r\n        .then(res => {\r\n            this.setState({isButtonDisabled: false})\r\n\r\n            if (res === \"Unable to login\") {\r\n                this.setState({isLogin: true})\r\n            }\r\n\r\n            if (res.token) {\r\n                this.setState({isLogin: false})\r\n\r\n                localStorage.setItem(\"auth_token\", res.token)\r\n\r\n                window.location.href = process.env.REACT_APP_URL + \"/\";\r\n            }\r\n        })\r\n    }\r\n\r\n    changeEmail (e) {\r\n        if (this.state.isLogin) {\r\n            this.setState({ isLogin: false})\r\n        }\r\n\r\n        this.setState({emailValue: e.target.value})\r\n    }\r\n\r\n    changePassword (e) {\r\n        if (this.state.isLogin) {\r\n            this.setState({ isLogin: false})\r\n        }\r\n        \r\n        this.setState({passwordValue: e.target.value})\r\n    }\r\n\r\n    passwordVisibleFunc () {\r\n        this.setState({isPasswordVisible: !this.state.isPasswordVisible});\r\n    }\r\n\r\n    render () {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Grid container component=\"main\" className={classes.root}>\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n                <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign In\r\n                </Typography>\r\n\r\n                <form className={classes.form} onSubmit={this.handleSubmit} noValidate>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"email\"\r\n                        label=\"Email Address\"\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        autoComplete=\"email\"\r\n                        value={this.state.emailValue}\r\n                        onChange={this.changeEmail}\r\n                    />\r\n\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type={!this.state.isPasswordVisible ? \"password\" : \"text\"}\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        value={this.state.passwordValue}\r\n                        onChange={this.changePassword}\r\n                        InputProps={{\r\n                            endAdornment: !this.state.isPasswordVisible ? <VisibilityOffIcon onClick={this.passwordVisibleFunc} cursor=\"pointer\"/> : <VisibilityIcon onClick={this.passwordVisibleFunc} cursor=\"pointer\"/>\r\n                        }}\r\n                    />\r\n\r\n                    {this.state.isLogin ? <Typography component=\"div\" variant=\"body1\">\r\n                        <Box color=\"secondary.main\">Wrong email or password</Box>\r\n                    </Typography> : null}\r\n\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        disabled={this.state.isButtonDisabled}\r\n                    >\r\n                    Sign In\r\n                    </Button>\r\n                    \r\n                    <Grid container>\r\n                        <Grid item>\r\n                            <Link href=\"/signup\" variant=\"body2\">\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Box mt={5}>\r\n                        <Copyright />\r\n                    </Box>\r\n                </form>\r\n                \r\n                </div>\r\n            </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(SignIn)","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Button from '@material-ui/core/Button';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = theme => ({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n      textTransform: \"none\"\r\n    },\r\n});\r\n\r\nclass Create extends React.Component {\r\n    constructor () {\r\n        super ();\r\n\r\n        this.state = {\r\n            taskName: '',\r\n            errorTest: '',\r\n            isInputDisabled: false,\r\n            isTasksAdded: false\r\n        }\r\n\r\n        this.addTask        = this.addTask.bind(this)\r\n        this.changeTaskName = this.changeTaskName.bind(this)\r\n    }\r\n\r\n    changeTaskName (e) {\r\n        if (this.state.errorTest) {\r\n            this.setState({errorTest: false})\r\n        }\r\n\r\n        this.setState({taskName: e.target.value})\r\n    }\r\n\r\n    addTask () {\r\n        this.setState({isInputDisabled: true})\r\n\r\n        fetch(\"https://api-nodejs-todolist.herokuapp.com/task\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem(\"auth_token\")\r\n            },\r\n            body: JSON.stringify({\r\n                description: this.state.taskName, \r\n            })\r\n        })\r\n        .then(response => {\r\n            return response.json()\r\n        })\r\n        .then(res => {\r\n            if (res.success) {\r\n                this.props.createCallback(res.data)\r\n                this.setState({taskName: '', isTasksAdded: true})\r\n\r\n                window.setTimeout(() => {\r\n                    this.setState({isTasksAdded: false})\r\n                }, 2000)\r\n\r\n            } else {\r\n                if (res.includes(\"`description` is required.\")) {\r\n                    this.setState({errorTest: \"Please fill the blank\"})\r\n                }\r\n            }\r\n\r\n            this.setState({isInputDisabled: false})\r\n        })\r\n        .catch(err => {\r\n            this.setState({isInputDisabled: false})\r\n            \r\n            this.setState({errorTest: \"An error occurred, try again\"})\r\n        })\r\n    }\r\n\r\n    render () {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <TextField\r\n                    label=\"Add something new...\"\r\n                    fullWidth\r\n                    disabled={this.state.isInputDisabled}\r\n                    error={!this.state.errorTest ? false : true}\r\n                    helperText={!this.state.errorTest ? null : this.state.errorTest}\r\n                    value={this.state.taskName}\r\n                    onChange={this.changeTaskName}\r\n                    onKeyUp={e => e.key === 'Enter' ? this.addTask() : null}\r\n                    InputProps={{\r\n                        endAdornment: <AddIcon style={{display: !this.state.isInputDisabled ? \"block\" : \"none\"}} onClick={this.addTask} cursor=\"pointer\" />\r\n                    }}\r\n                />\r\n\r\n                {this.state.isTasksAdded ? <Button variant=\"contained\" style={{backgroundColor: \"#4caf50\", color: \"#fff\"}} className={classes.button} startIcon={<CheckCircleIcon />}>\r\n                    Task Added Successfully\r\n                </Button> : null}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(Create)","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Create from './Create';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst useStyles = theme => ({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n      textTransform: \"none\"\r\n    },\r\n});\r\n\r\nclass Tasks extends React.Component {\r\n\r\n    constructor () {\r\n        super ();\r\n\r\n        this.state = {\r\n            data: [],\r\n            isLoaded: false,\r\n            deleteTaskError: false,\r\n            deleteTaskSuccess: false\r\n        }\r\n\r\n        this.callbackFunction   = this.callbackFunction.bind(this)\r\n        this.deleteTask         = this.deleteTask.bind(this)\r\n        this.changeStatus       = this.changeStatus.bind(this)\r\n    }\r\n    \r\n    componentDidMount () {\r\n        fetch(\"https://api-nodejs-todolist.herokuapp.com/task\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem(\"auth_token\")\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(res => {\r\n            this.setState({data: res.data, isLoaded: true})\r\n        })\r\n    }\r\n\r\n    callbackFunction (childData) {\r\n        this.setState({data: [...this.state.data, childData]})\r\n    }\r\n\r\n    deleteTask (id, description) {\r\n        if (window.confirm(\"Do you want to delete \" + description + \" ?\")) {\r\n            this.setState({isLoaded: false});\r\n\r\n            fetch(\"https://api-nodejs-todolist.herokuapp.com/task/\" + id, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"auth_token\"),\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            })\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                if (result.success) {\r\n                    let availableTasks = this.state.data.filter(item => {\r\n                        return item._id !== id;\r\n                    })\r\n            \r\n                    this.setState({data: availableTasks, isLoaded: true, deleteTaskSuccess: true})\r\n\r\n                    window.setTimeout(() => {\r\n                        this.setState({deleteTaskSuccess: false})\r\n                    }, 2000)\r\n                } else {\r\n                    this.setState({isLoaded: true, deleteTaskError: true})\r\n\r\n                    window.setTimeout(() => {\r\n                        this.setState({deleteTaskError: false})\r\n                    }, 2000)\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this.setState({isLoaded: true, deleteTaskError: true})\r\n\r\n                window.setTimeout(() => {\r\n                    this.setState({deleteTaskError: false})\r\n                }, 2000)\r\n            });\r\n        }\r\n    }\r\n\r\n    changeStatus (id, isChecked) {\r\n        fetch(\"https://api-nodejs-todolist.herokuapp.com/task/\" + id, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"auth_token\"),\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                completed: isChecked, \r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(res => {\r\n            console.log(res)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        });\r\n    }\r\n\r\n    render () {\r\n        const { classes } = this.props;\r\n        \r\n        return (\r\n            <div>\r\n                <Create createCallback={this.callbackFunction} />\r\n\r\n                {this.state.deleteTaskError ? <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    startIcon={<ErrorIcon />}\r\n                >\r\n                    An error occurred, please try again\r\n                </Button> : null}\r\n\r\n                {this.state.deleteTaskSuccess ? <Button\r\n                    variant=\"contained\"\r\n                    style={{backgroundColor: \"#4caf50\", color: \"#fff\"}}\r\n                    className={classes.button}\r\n                    startIcon={<CheckCircleIcon />}\r\n                >\r\n                    Task deleted successfully\r\n                </Button> : null}\r\n\r\n                <List>\r\n                    {!this.state.isLoaded ? <CircularProgress /> : \r\n                        !this.state.data.length ? <ListItem button><ListItemText primary={`No items yet.`} /></ListItem> :\r\n                        this.state.data.map(item => {\r\n                            return (\r\n                                <ListItem button selected={item.completed} key={item._id}>\r\n                                    <ListItemIcon>\r\n                                        <Checkbox\r\n                                            color=\"primary\"\r\n                                            defaultChecked={item.completed}\r\n                                            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                            onChange={e => this.changeStatus(item._id, e.target.checked)}\r\n                                        />\r\n                                    </ListItemIcon>\r\n\r\n                                    <ListItemText primary={item.description} />\r\n\r\n                                    <ListItemSecondaryAction>\r\n                                        <IconButton onClick={(e) => this.deleteTask(item._id, item.description)} edge=\"end\" aria-label=\"comments\">\r\n                                            <DeleteIcon />\r\n                                        </IconButton>\r\n                                    </ListItemSecondaryAction>\r\n\r\n                                </ListItem>\r\n                            )\r\n                        })\r\n                    }\r\n                </List>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(Tasks)","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport CakeIcon from '@material-ui/icons/Cake';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Tasks from './Tasks/Tasks';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n      appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n      },\r\n      menuButton: {\r\n        marginRight: theme.spacing(2),\r\n      },\r\n      hide: {\r\n        display: 'none',\r\n      },\r\n      drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n      },\r\n      drawerPaper: {\r\n        width: drawerWidth,\r\n      },\r\n      drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n      },\r\n      content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n      },\r\n      contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n      },\r\n      centerImage: {\r\n        position: 'relative',\r\n        left: \"50%\",\r\n        transform: 'translate(-50%, 0%)',\r\n        marginBottom: '10px'\r\n      },\r\n      button: {\r\n        margin: theme.spacing(1),\r\n      },\r\n});\r\n\r\nclass Dashboard extends React.Component {\r\n    constructor () {\r\n        super();\r\n\r\n        this.state = {\r\n            open: false,\r\n            userName: '',\r\n            userEmail: '',\r\n            userId: 0,\r\n            imageName: './def_icon.png'\r\n        }\r\n\r\n        this.handleDrawerOpen = this.handleDrawerOpen.bind(this)\r\n        this.handleDrawerClose = this.handleDrawerClose.bind(this)\r\n        this.uploadImage = this.uploadImage.bind(this)\r\n    }\r\n\r\n    componentDidMount () {\r\n        fetch(\"https://api-nodejs-todolist.herokuapp.com/user/me\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem(\"auth_token\")\r\n            }\r\n        })\r\n        .then(response => {\r\n            return response.json()\r\n        })\r\n        .then(res => {\r\n            if (res.error === \"Please authenticate.\") {\r\n                window.location.href = process.env.REACT_APP_URL + \"/signin\";\r\n            } else {\r\n                this.setState({userName: res.name, userEmail: res.email, userAge: res.age, userId: res._id})\r\n            }\r\n        })\r\n    }\r\n\r\n    handleDrawerOpen () {\r\n        this.setState({open: true})\r\n    }\r\n\r\n    handleDrawerClose () {\r\n        this.setState({open: false})\r\n    }\r\n\r\n    logoutFunc () {\r\n        if (window.confirm(\"Are you sure?\")) {\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Authorization\", \"Bearer \" + localStorage.getItem(\"auth_token\"));\r\n\r\n            var requestOptions = {\r\n                method: 'POST',\r\n                headers: myHeaders,\r\n            };\r\n\r\n            fetch(\"https://api-nodejs-todolist.herokuapp.com/user/logout\", requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                if (result.success) {\r\n                    localStorage.removeItem(\"auth_token\")\r\n                    window.location.href = process.env.REACT_APP_URL + \"/signin\"\r\n                }\r\n            })\r\n            .catch(error => console.log('error', error));\r\n        }\r\n    }\r\n\r\n    uploadImage (e) {\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Authorization\", \"Bearer \" + localStorage.getItem(\"auth_token\"));\r\n\r\n        let formdata = new FormData();\r\n        formdata.append(\"avatar\", e.target.files[0], \"blog-header.jpg\");\r\n\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: formdata,\r\n            redirect: 'follow'\r\n        };\r\n        \r\n        fetch(\"https://api-nodejs-todolist.herokuapp.com/user/me/avatar\", requestOptions)\r\n        .then(response => response.json())\r\n        .then(result => {\r\n            console.log(result);\r\n\r\n            if (result.succes) {\r\n                let requestOptions = {\r\n                    method: 'GET',\r\n                    redirect: 'follow'\r\n                };\r\n        \r\n                fetch(\"https://api-nodejs-todolist.herokuapp.com/user/\"+this.state.userId+\"/avatar\", requestOptions)\r\n                .then(response => response.json())\r\n                .then(res => {\r\n                    this.setState({imageName: res})\r\n                })\r\n                .catch(error => console.log('error', error));\r\n            }\r\n        })\r\n        .catch(error => console.log('error', error));\r\n    }\r\n\r\n    render () {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <CssBaseline />\r\n                <AppBar\r\n                    position=\"fixed\"\r\n                    className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: this.state.open,\r\n                    })}\r\n                >\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={this.handleDrawerOpen}\r\n                            edge=\"start\"\r\n                            className={clsx(classes.menuButton, this.state.open && classes.hide)}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        \r\n                        <Typography variant=\"h6\" noWrap>To Do List</Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={this.state.open}\r\n                    classes={{\r\n                    paper: classes.drawerPaper,\r\n                    }}\r\n                >\r\n                    <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={this.handleDrawerClose}>\r\n                        <ChevronLeftIcon />\r\n                    </IconButton>\r\n                    </div>\r\n                    \r\n                    <Avatar alt=\"Remy Sharp\" className={classes.centerImage} src={this.state.imageName} />\r\n                    \r\n                    <Divider />\r\n\r\n                    <List>\r\n                        <ListItem button>\r\n                            <ListItemIcon>\r\n                                <PersonIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={this.state.userName} />\r\n                        </ListItem>\r\n\r\n                        <ListItem button>\r\n                            <ListItemIcon>\r\n                                <MailIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={this.state.userEmail} />\r\n                        </ListItem>\r\n\r\n                        <ListItem button>\r\n                            <ListItemIcon>\r\n                                <CakeIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={this.state.userAge} />\r\n                        </ListItem>\r\n\r\n                        <Divider />\r\n\r\n                        <ListItem button onClick={this.logoutFunc}>\r\n                            <ListItemIcon>\r\n                                <ExitToAppIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Log Out\" />\r\n                        </ListItem>\r\n                    </List>        \r\n                </Drawer>\r\n                <main className={clsx(classes.content, {[classes.contentShift]: this.state.open})}>\r\n                    <div className={classes.drawerHeader} />\r\n\r\n                    <Tasks />\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(Dashboard)","import React from 'react';\nimport SignUp from './components/Auth/SignUp';\nimport SignIn from './components/Auth/SignIn';\nimport Dashboard from './components/Dashboard/Dashboard';\n\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\n\nclass App extends React.Component {\n  render () {\n    return (\n      <Router basename={`${process.env.REACT_APP_URL}/`}>\n        <Switch>\n          <Route exact path=\"/\">\n            <Dashboard />\n          </Route>\n\n          {/* Sign Up Route */}\n          <Route path=\"/signup\">\n            <SignUp />\n          </Route>\n\n          {/* Sign In Route */}\n          <Route path=\"/signin\">\n            <SignIn />\n          </Route>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconsole.log(process.env.REACT_APP_URL);\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', () => {\n    navigator.serviceWorker.register(process.env.REACT_APP_URL + '/serviceworker.js')\n  })\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}